{"ast":null,"code":"var _jsxFileName = \"/Users/rohancherukuri/work/LGO/chatbot-app/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [botResponse, setBotResponse] = useState({});\n  const [excelResponse, setExcelResponse] = useState('');\n  const handleValueChange = (section, key, newValue) => {\n    setBotResponse(prevResponse => ({\n      ...prevResponse,\n      [section]: {\n        ...prevResponse[section],\n        [key]: newValue\n      }\n    }));\n  };\n  const handleExportToExcelClick = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/api/exportToExcel', {\n        responseType: 'blob' // Set the response type to blob (binary data)\n      });\n\n      // Create a blob URL for the Excel file\n      const blob = new Blob([response.data], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      });\n      const blobUrl = URL.createObjectURL(blob);\n\n      // Create a download link and trigger a click event to download the file\n      const downloadLink = document.createElement('a');\n      downloadLink.href = blobUrl;\n      downloadLink.download = 'generated_excel.xlsx';\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n    } catch (error) {\n      console.error('Error exporting Excel file:', error);\n    }\n  };\n  const convertValuesToFloat = obj => {\n    const convertedObj = {};\n    for (const key in obj) {\n      if (typeof obj[key] === 'object') {\n        convertedObj[key] = convertValuesToFloat(obj[key]);\n      } else if (!isNaN(parseFloat(obj[key]))) {\n        convertedObj[key] = parseFloat(obj[key]);\n      } else {\n        convertedObj[key] = obj[key];\n      }\n    }\n    return convertedObj;\n  };\n  const formatBotResponse = response => {\n    // Convert the dictionary object to an array of [key, value] pairs\n    const keyValuePairs = Object.entries(response);\n\n    // Create a <div> element for each key-value pair\n    return keyValuePairs.map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `| ${key} | ${value} |`\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this));\n  };\n  const sendMessage = async () => {\n    if (inputValue.trim() === '') return;\n    const newMessage = {\n      text: inputValue,\n      fromUser: true\n    };\n    setMessages([...messages, newMessage]);\n    setInputValue('');\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/chatbot', {\n        message: inputValue\n      });\n      setBotResponse(JSON.parse(response.data.message));\n      setExcelResponse(JSON.parse(response.data.excel));\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  const handleSubmit = async () => {\n    try {\n      const convertedEntryAss = convertValuesToFloat(botResponse.entry_ass);\n      const convertedIsAss = convertValuesToFloat(botResponse.is_ass);\n      const response = await axios.post('http://127.0.0.1:5000/api/submit', {\n        entry_ass: convertedEntryAss,\n        is_ass: convertedIsAss\n      });\n      const botMessage = {\n        text: formatBotResponse(response.data.message),\n        fromUser: false\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error('Error submitting data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.fromUser ? 'user-message' : 'bot-message',\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        onKeyPress: e => {\n          if (e.key === 'Enter') {\n            sendMessage();\n          }\n        },\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-response-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Entry Assumptions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), Object.keys(botResponse.entry_ass || {}).length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Key\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(botResponse.entry_ass || {}).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: value,\n                onChange: e => handleValueChange('entry_ass', key, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No entry assumptions from the bot yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-response-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Interest Assumptions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), Object.keys(botResponse.is_ass || {}).length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Key\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(botResponse.is_ass || {}).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: value,\n                onChange: e => handleValueChange('is_ass', key, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No interest assumptions from the bot yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-response-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Excel Table Output\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: excelResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"export-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExportToExcelClick,\n        children: \"Export to Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"6tF6aHFjqN2DGtZjaLryDP/KjDs=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","inputValue","setInputValue","botResponse","setBotResponse","excelResponse","setExcelResponse","handleValueChange","section","key","newValue","prevResponse","handleExportToExcelClick","response","get","responseType","blob","Blob","data","type","blobUrl","URL","createObjectURL","downloadLink","document","createElement","href","download","body","appendChild","click","removeChild","error","console","convertValuesToFloat","obj","convertedObj","isNaN","parseFloat","formatBotResponse","keyValuePairs","Object","entries","map","value","index","children","fileName","_jsxFileName","lineNumber","columnNumber","sendMessage","trim","newMessage","text","fromUser","post","message","JSON","parse","excel","handleSubmit","convertedEntryAss","entry_ass","convertedIsAss","is_ass","botMessage","prevMessages","className","onChange","e","target","onKeyPress","placeholder","onClick","keys","length","_c","$RefreshReg$"],"sources":["/Users/rohancherukuri/work/LGO/chatbot-app/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './Chatbot.css';\n\n\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [botResponse, setBotResponse] = useState({});\n  const [excelResponse, setExcelResponse] = useState('');\n\n  const handleValueChange = (section, key, newValue) => {\n    setBotResponse((prevResponse) => ({\n      ...prevResponse,\n      [section]: {\n        ...prevResponse[section],\n        [key]: newValue,\n      },\n    }));\n  };\n\n  const handleExportToExcelClick = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/api/exportToExcel', {\n        responseType: 'blob', // Set the response type to blob (binary data)\n      });\n  \n      // Create a blob URL for the Excel file\n      const blob = new Blob([response.data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n      const blobUrl = URL.createObjectURL(blob);\n  \n      // Create a download link and trigger a click event to download the file\n      const downloadLink = document.createElement('a');\n      downloadLink.href = blobUrl;\n      downloadLink.download = 'generated_excel.xlsx';\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n    } catch (error) {\n      console.error('Error exporting Excel file:', error);\n    }\n  };\n  \n  const convertValuesToFloat = (obj) => {\n    const convertedObj = {};\n    \n    for (const key in obj) {\n      if (typeof obj[key] === 'object') {\n        convertedObj[key] = convertValuesToFloat(obj[key]);\n      } else if (!isNaN(parseFloat(obj[key]))) {\n        convertedObj[key] = parseFloat(obj[key]);\n      } else {\n        convertedObj[key] = obj[key];\n      }\n    }\n    \n    return convertedObj;\n  };\n\n  const formatBotResponse = (response) => {\n    // Convert the dictionary object to an array of [key, value] pairs\n    const keyValuePairs = Object.entries(response);\n  \n    // Create a <div> element for each key-value pair\n    return keyValuePairs.map(([key, value], index) => (\n      <div key={index}>\n        {`| ${key} | ${value} |`}\n      </div>\n    ));\n  };\n\n  const sendMessage = async () => {\n    if (inputValue.trim() === '') return;\n\n    const newMessage = { text: inputValue, fromUser: true };\n    setMessages([...messages, newMessage]);\n    setInputValue('');\n\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/chatbot', {\n        message: inputValue,\n      });\n      setBotResponse(JSON.parse(response.data.message));\n      setExcelResponse(JSON.parse(response.data.excel));\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const convertedEntryAss = convertValuesToFloat(botResponse.entry_ass);\n      const convertedIsAss = convertValuesToFloat(botResponse.is_ass);\n      const response = await axios.post('http://127.0.0.1:5000/api/submit', {\n        entry_ass: convertedEntryAss,\n        is_ass: convertedIsAss,\n      });\n\n      const botMessage = { text: formatBotResponse(response.data.message), fromUser: false };\n      setMessages((prevMessages) => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error('Error submitting data:', error);\n    }\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"chatbot-messages\">\n        {messages.map((message, index) => (\n          <div key={index} className={message.fromUser ? 'user-message' : 'bot-message'}>\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <div className=\"chatbot-input\">\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n          onKeyPress={(e) => {\n            if (e.key === 'Enter') {\n              sendMessage();\n            }\n          }}\n          placeholder=\"Type your message...\"\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n      <div className=\"bot-response-table\">\n        <h3>Entry Assumptions:</h3>\n        {Object.keys(botResponse.entry_ass || {}).length > 0 ? (\n          <table>\n            <thead>\n              <tr>\n                <th>Key</th>\n                <th>Value</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.entries(botResponse.entry_ass || {}).map(([key, value], index) => (\n                <tr key={index}>\n                  <td>{key}</td>\n                  <td>\n                    <input\n                      type=\"text\"\n                      value={value}\n                      onChange={(e) => handleValueChange('entry_ass', key, e.target.value)}\n                    />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          <p>No entry assumptions from the bot yet.</p>\n        )}\n      </div>\n      <div className=\"bot-response-table\">\n        <h3>Interest Assumptions:</h3>\n        {Object.keys(botResponse.is_ass || {}).length > 0 ? (\n          <table>\n            <thead>\n              <tr>\n                <th>Key</th>\n                <th>Value</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.entries(botResponse.is_ass || {}).map(([key, value], index) => (\n                <tr key={index}>\n                  <td>{key}</td>\n                  <td>\n                    <input\n                      type=\"text\"\n                      value={value}\n                      onChange={(e) => handleValueChange('is_ass', key, e.target.value)}\n                    />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          <p>No interest assumptions from the bot yet.</p>\n        )}\n      </div>\n      <div className=\"bot-response-table\">\n      <h3>Excel Table Output</h3>\n      <span>{excelResponse}</span>\n    </div>\n      <div className=\"submit-button\">\n        <button onClick={handleSubmit}>Submit</button>\n      </div>\n\n      <div className=\"export-button\">\n      <button onClick={handleExportToExcelClick}>Export to Excel</button>\n    </div>\n\n    </div>\n    \n    \n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}