{"ast":null,"code":"var _jsxFileName = \"/Users/rohancherukuri/work/LGO/chatbot-app/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const formatBotResponse = response => {\n    // Convert the dictionary object to an array of [key, value] pairs\n    const keyValuePairs = Object.entries(response);\n\n    // Create a <div> element for each key-value pair\n    return keyValuePairs.map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `| ${key} | ${value} |`\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this));\n  };\n  const sendMessage = async () => {\n    if (inputValue.trim() === '') return;\n\n    // Add the user message to the state\n    const newMessage = {\n      text: inputValue,\n      fromUser: true\n    };\n    setMessages([...messages, newMessage]);\n    setInputValue('');\n\n    // Make the API call to the Flask server\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/chatbot', {\n        message: inputValue\n      });\n\n      // Format the bot's response before setting it in the state\n      const formattedResponse = formatBotResponse(response.data.message);\n      const botMessage = {\n        text: formattedResponse,\n        fromUser: false\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.fromUser ? 'user-message' : 'bot-message',\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        onKeyPress: e => {\n          if (e.key === 'Enter') {\n            sendMessage();\n          }\n        },\n        placeholder: \"Paste code...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"slbeoFq67b53BRRhfk6DiRI5k0A=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","inputValue","setInputValue","formatBotResponse","response","keyValuePairs","Object","entries","map","key","value","index","children","fileName","_jsxFileName","lineNumber","columnNumber","sendMessage","trim","newMessage","text","fromUser","post","message","formattedResponse","data","botMessage","prevMessages","error","console","className","type","onChange","e","target","onKeyPress","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/rohancherukuri/work/LGO/chatbot-app/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './Chatbot.css';\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  const formatBotResponse = (response) => {\n    // Convert the dictionary object to an array of [key, value] pairs\n    const keyValuePairs = Object.entries(response);\n  \n    // Create a <div> element for each key-value pair\n    return keyValuePairs.map(([key, value], index) => (\n      <div key={index}>\n        {`| ${key} | ${value} |`}\n      </div>\n    ));\n  };\n  \n\n  const sendMessage = async () => {\n    if (inputValue.trim() === '') return;\n\n    // Add the user message to the state\n    const newMessage = { text: inputValue, fromUser: true };\n    setMessages([...messages, newMessage]);\n    setInputValue('');\n\n    // Make the API call to the Flask server\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/chatbot', {\n        message: inputValue\n      });\n\n      // Format the bot's response before setting it in the state\n      const formattedResponse = formatBotResponse(response.data.message);\n      const botMessage = { text: formattedResponse, fromUser: false };\n      setMessages((prevMessages) => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"chatbot-messages\">\n        {messages.map((message, index) => (\n          <div key={index} className={message.fromUser ? 'user-message' : 'bot-message'}>\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <div className=\"chatbot-input\">\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n          onKeyPress={(e) => {\n            if (e.key === 'Enter') {\n              sendMessage();\n            }\n          }}\n          placeholder=\"Paste code...\"\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}